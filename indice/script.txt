<html>

<head>


<title>Índice Respondi.com.br Por Mario Persona</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"> 
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script> 
    
</head>

<body>

<!-- Go to www.addthis.com/dashboard to customize your tools --> 
<!-- <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-59d4445a35d0aa43"></script> -->

<!--Start of Tawk.to Script-->
<script type="text/javascript">
var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();
(function(){
var s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];
s1.async=true;
s1.src='https://embed.tawk.to/5c265c3582491369ba9fcaac/default';
s1.charset='UTF-8';
s1.setAttribute('crossorigin','*');
s0.parentNode.insertBefore(s1,s0);
})();
</script>
<!--End of Tawk.to Script-->

<script>
// resolve erro de redirecionamento a partir do facebook
$(document).ready(function() {
var url = location.href;
if(url.indexOf("&fbclid=")==-1) {
} else {
var url_atual = window.location.href;
var str = url_atual;
var match = str.split('&fbclid=');
window.location.replace(match[0]);
}
});
//FIM de resolve erro de redirecionamento a partir do facebook
</script>


<script>
// resolve erro de redirecionamento a partir do facebook
$(document).ready(function() {
var url = location.href;
if(url.indexOf("?fbclid=")==-1) {
} else {
var url_atual = window.location.href;
var str = url_atual;
var match = str.split('?fbclid=');
window.location.replace(match[0]);
}
});
//FIM de resolve erro de redirecionamento a partir do facebook
</script>






<center>
     <form method="GET">
     <p align="center">

     </font><font face="Verdana, Arial, Helvetica, sans-serif">
     
     </p>

     <font size="2">

<div id="fb-root"></div>

<script>

(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/pt_BR/sdk.js#xfbml=1&version=v2.9";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));

</script>

<!-- 
<div class="fb-share-button" data-href="" data-layout="button" data-size="small" data-mobile-iframe="false"><a class="fb-xfbml-parse-ignore" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F%2F&amp;src=sdkpreparse">Compartilhar</a></div>
Go to www.addthis.com/dashboard to customize your tools --> 
</p>
</br>
</p>
</br>

<script>
$(function(){
  var regex = new RegExp('[\?]', 'g');
  // repare a flag "g" de global, para substituir todas as ocorrências
  $('input').bind('input', function(){
    $(this).val($(this).val().replace(regex, ''));
  });
})
</script>

     <input type="text" placeholder="Digite sua pergunta" autofocus name="query" size="16" style="font-size: 11 pt; color: #000000; font-family: Verdana; font-variant: small-; border: 1 solid #000000">
     </font></font> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
     <input  type="submit" value="Buscar"  style="font-size: 8 pt; color: #000000; font-family: Verdana; font-variant: small-caps; border: 1 solid #000000">
     </font> 
     </form>
</center>     
</table>
<table width="100%">
    <tr> 
     <td height="0" bgcolor="#C0C0C0" width="100%"></td>
    </tr>
  </table>
</div>
</center>
<center>
<div align="center" style="width: 100%; height: 100%"> 
  <table width="80%">
    <tr> 
      <!--<td width="100%"><font size="3" face="Verdana, Arial, Helvetica, sans-serif">-->
      <td width="100%" style="font-size: 14px; color: #000000; font-family: Verdana; font-variant: small-; border: 1 solid #000000">
        
<script language="">

function removeAcento (text)
{       
    text = text.toLowerCase ();                                                         
    text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');
    text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');
    text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');
    text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');
    text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');
    text = text.replace(new RegExp('[Ç]','gi'), 'c');

    return text;                 
}

function kw_list ()
{
this.keywords = new Array ();

this.num_words = 0;

this.query = "";

this.original_query = "";

this.query_length = 0;

this.possible_points = 0;

this.multiple = points_title + points_keywords + points_description;

this.get_words = get_query;

this.no_query = no_query_found;
}
function get_query ()
{
this.query = top.location.search.substring (top.location.search.indexOf ('=') + 1);

while ((the_plus = (this.query.indexOf ("+", 0))) != -1)

{

this.query_length = this.query.length;

this.query = this.query.substring (0, the_plus) + " " + this.query.substring (the_plus + 1);

}

this.original_query = decodeURIComponent(this.query);

this.query = removeAcento(this.original_query);

this.query_length = this.query.length;  

if (this.query != "")

{

var query_pointer = 0;

var end_word = 0;

var at_end = 0;

while ((this.num_words <= (max_keywords - 1)) && (! at_end))

{

end_word = this.query.indexOf (" ", query_pointer);

if (end_word == query_pointer)

query_pointer++;

else

{

if (end_word >= (this.query_length - 1))

at_end = 1;

if (end_word != -1)

this.keywords[this.num_words] = removeAcento(this.query.substring (query_pointer, end_word));

else

{

this.keywords[this.num_words] = this.query.substring (query_pointer, this.query_length);

at_end = 1;

}

this.num_words++;

if (query_pointer != -1)

query_pointer = end_word + 1;

if (query_pointer > (this.query_length - 1))

at_end = 1;

}

}

if (this.num_words == 0)

return (0);

else

{

this.possible_points = this.multiple * this.num_words;

return (1);

}

}

else

return (0);

}



function no_query_found ()

{

document.writeln ('<link rel="stylesheet" href="gp.css">');

document.writeln ('<CENTER><P>Pesquisa em branco.</P></CENTER>');

}

function entry (url, title, keywords, description)

{

this.url = url;

this.title = title;

this.keywords = keywords;

this.description = description;

this.points = 0;

this.search_entry = find_keyword;

this.print_entry = print_result;

}

function find_keyword (the_word)

{

var the_title = removeAcento(this.title);

var the_keywords = removeAcento(this.keywords);

var the_description = removeAcento(this.description);

if ((the_title.indexOf (the_word)) != -1)

this.points += points_title;

if ((the_keywords.indexOf (the_word)) != -1)

this.points += points_keywords;

if ((the_description.indexOf (the_word)) != -1)

this.points += points_description;

}


function print_result (possible_points)

{

document.writeln ('<CENTER><P><A HREF="' + this.url + '" target="meio">' + this.title + '</A>' + this.description + '</P></CENTER>');

}



function no_entry_printed (the_query)

{

document.writeln ('<link rel="stylesheet" href="gp.css">');

document.writeln ("<CENTER><P> Não há ocorrências para <U><B>" + the_query + "</B></U>.</P></CENTER>"); 

}



function print_intro (the_query)

{

document.writeln ("<CENTER><P>Pesquisando por <U><B>" + the_query + "</B></U>:</P></CENTER>"); 

}

function begin_search ()

{

var key_list = new kw_list;

var entry_printed = 0;

if (! key_list.get_words ())

key_list.no_query ();

else

{

var counter = 0;

var counter2 = 0;

for (counter = 0; counter < entry_num; counter++)

for (counter2 = 0; counter2 <= (key_list.num_words - 1); counter2++)

the_entries[counter].search_entry (key_list.keywords[counter2]);

for (counter = key_list.possible_points; counter > 0; counter--)

{                                                                        

for (counter2 = 0; counter2 < entry_num; counter2++)

{

if (counter == the_entries[counter2].points)

{

if (entry_printed != 1)

{

entry_printed = 1;

print_intro (key_list.original_query);

}

the_entries[counter2].print_entry (key_list.possible_points);

}

}

}

if (! entry_printed)

no_entry_printed (key_list.original_query);

}

}

the_entries = new Array ();

//aqui vai as entradas para a pesquisa
